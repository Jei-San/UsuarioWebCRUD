@page "/userlist"
@inject HttpClient Http
@inject NavigationManager navigationManager
@using UsuarioWebCRUD.Shared
@using UsuarioWebCRUD.Shared.Models

<h1>Lista de Usuarios</h1>
<br />
<p>
    <a href="adduser">Crear un usuario</a>
</p>
@if (usersList == null)
{
    <text>Cargando...</text>
}
else
{
    <div class="container mb-3 mt-3">
        <table class="table table-striped table-bordered mydatatable" style="width:100%">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in usersList)
                {
                    <tr>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>
                            <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            @bind-Value=@multipleValues Multiple="true" Placeholder="Select..." Data=@data TextProperty="ProfessionName" ValueProperty="ProfessionName"  
                                            Change=@(() => PostUserProfession()) Style="width:400px" />
                            <a class="btn btn-success" href="edituser/@user.UserId">Editar</a>
                            <a class="btn btn-danger" href="deleteuser/@user.UserId">Borrar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
@code {
    [Parameter]
    public string id { get; set; }

    IEnumerable<string> multipleValues = new string[] { "ALFKI", "ANATR" };
    string value = "ALFKI";
    User[] usersList;
    List<UserData> data = new List<UserData>();
    Profession profession = new Profession();
    UserProfession userProfession = new UserProfession();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        usersList = await Http.GetFromJsonAsync<User[]>("api/UserInfoes");
    }

    public async Task GetProfessions()
    {
        data = await Http.GetFromJsonAsync<List<UserData>>("api/ProfessionInfoes");
        profession = data.First().Profession;
    }
    public async Task PostUserProfession()
    {
        await Http.PostAsJsonAsync("api/UserProfesionInfoes", userProfession);
    }
}
